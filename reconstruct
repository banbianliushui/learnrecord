
1.
无模块化概念；
存在冗余逻辑和文件；
滥用第三方库&工具；
UI的更新仍旧是直接操作DOM；
构建&发布流程不规范。
以上问题其实跟业务以及技术选型无关，可以说是任何一个“历史悠久”的项目都难以避免的问题。针对以上问题的重构方案不是本文要阐述的核心，所以就一笔带过。如下：

重构模块化架构；
删除冗余逻辑和文件；
规范并尽量减少第三方库&工具的使用；
使用Vue作为View层框架，尽量减少直接操作DOM；
规范构建&发布流程，完善工程体系。

[SVG的动态之美-搜狗地铁图重构散记](https://www.cnblogs.com/ihardcoder/p/9052713.html)

2.浏览器的重绘与重排(http://developer.51cto.com/art/201308/408412.htm)
